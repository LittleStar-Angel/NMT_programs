#!/bin/bash
#
###################################################################################################
# Author: newTranx.com
# Date: 2015-05-16
# Description: This script is to run Moses Servers for translation and recasing. 
# Usage: sudo -u ubuntu run_moses [-t transl_cpu_list] [-r recase_cpu_list]
#        -t = to run the translation model cpu list
#        -c = to run the recaser model cpu list
# Example: sudo -u ubuntu ./run_moses -t 1,2,3 -r 4,5,6
####################################################################################################

# check if we're actually running in Bash
if [ "$BASH_VERSION" = '' ]; then
    echo "This script must be run in bash (not sh)."; 
    exit 1;
fi

# Parse options
usage(){ echo "Usage: $0 [-t transl_cpu_list] [-r recase_cpu_list]" 1>&2; exit 1; }

while getopts "r:t:" OPT; do
    case "$OPT" in
        r)
            RECASE_CPUSET="taskset -c $OPTARG"
            ;;
        t)
            TRANSL_CPUSET="taskset -c $OPTARG"
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))


# Find out current MT base directory
BASEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && dirname `pwd` )"

# Lock file (until loaded)
echo $$ > $BASEDIR/logs/.moses_loading

# Pre-set environment
. $BASEDIR/scripts/moses_setenv.sh
. $BASEDIR/config/config_moses.sh
TRANSL_LOGFILE=$BASEDIR/logs/translate.log
RECASE_LOGFILE=$BASEDIR/logs/recaser.log

# Run the startup commands
cd $MODELS_DIR
nohup $TRANSL_CPUSET mosesserver --server-port $TRANSL_PORT  -f $TRANSL_INI -xml-input inclusive -monotone-at-punctuation -search-algorithm 1 -threads all >> $TRANSL_LOGFILE 2>&1 &
TRANSL_PID=$!
if [[ -n "$RECASER_PORT" ]]; then
    nohup $RECASE_CPUSET mosesserver --server-port $RECASER_PORT -f $RECASER_INI -threads all >> $RECASE_LOGFILE 2>&1 &
    RECASER_PID=$!
fi

# Wait for the servers to be loaded
until nc -z localhost $TRANSL_PORT; do
    sleep 10;
    kill -0 $TRANSL_PID || { echo "Moses translation process is not running. Please check $TRANSL_LOGFILE for errors."; exit 1; }
done
if [[ -n "$RECASER_PORT" ]]; then
    until nc -z localhost $RECASER_PORT; do
        sleep 10;
        kill -0 $RECASER_PID || { echo "Moses recaser process is not running. Please check $RECASE_LOGFILE for errors."; exit 1; }
    done
fi

rm $BASEDIR/logs/.moses_loading
