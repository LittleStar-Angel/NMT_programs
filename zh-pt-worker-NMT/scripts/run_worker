#!/bin/bash
#
###################################################################################################
# Author: newTranx.com
# Date: 2015-05-14
# Description: This script is to run worker with correct logging and configuration setting. 
# Usage: sudo -u ubuntu run_worker [-r] [-c cpus]
#        -r = Force restart
#        -c = List of allowed CPUs (see taskset -c)
####################################################################################################


# Parse options
usage(){ echo "Usage: $0 [-r] [-c cpu_list] " 1>&2; exit 1; }

while getopts "rc:" OPT; do
    case "$OPT" in
        r)
            RESTART=1
            ;;
        c)
            CPUSET="taskset -c $OPTARG"
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

# Set environment
BASEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && dirname `pwd` )"
USERHOME=`dirname $BASEDIR`
VERSION=`basename $BASEDIR`

# Restart if needed
if [[ -n "$RESTART" ]]; then
    echo "Killing existing worker..."
    for i in `ps ax | grep "$VERSION.*/worker\.py" | sed 's/^\s*\([0-9]\+\)\s.*/\1/'`; do 
        echo $i;
        kill $i; 
    done
    sleep 2
fi

# Connect to the remote server
# Activate Virtualenv
. $USERHOME/virtualenv/bin/activate
WORKER_PORT=`cat $BASEDIR/config/worker.cfg | grep '^PORT' | sed s'/[^0-9]//g'`

# Start worker
cd $BASEDIR/logs
nohup $CPUSET python $BASEDIR/worker/worker.py -c $BASEDIR/config/worker.cfg >> $BASEDIR/logs/worker.log 2>&1 &

echo $!> $BASEDIR/PID
# Wait for it to load
until nc -z localhost $WORKER_PORT; do
    sleep 2;
done

